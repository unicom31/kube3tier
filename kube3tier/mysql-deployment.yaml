apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS pratice_board;
    
    USE pratice_board;
    
    CREATE TABLE IF NOT EXISTS post (
      `num` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
      `title` VARCHAR(50) NOT NULL,
      `writer` VARCHAR(50) NOT NULL,
      `content` TEXT NOT NULL,
      `reg_date` DATETIME NOT NULL
    );
    
    INSERT INTO post (title, writer, content, reg_date)
    VALUES ('first', 'kwjeon', 'yaml test', '2024-12-09');
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
data:
  DB_Password: cm9vdA==
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  volumeMode: Filesystem
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mysql/mysql_data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      nodePort: 30300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: DB_Password
            - name: MYSQL_DATABASE
              value: pratice_board
          volumeMounts:
            - name: mysql-volume
              mountPath: /var/lib/mysql
            - name: init-sql-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-volume
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: init-sql-volume
          configMap:
            name: mysql-init-config